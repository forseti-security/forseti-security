# Copyright 2017 The Forseti Security Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file contains several example matches firewall rules.
# 
# Note: Required and Matches rules can only have "match_policies" fields which will
# be validated.
#
# Matches rules are evaluated in the following steps:
# 1. Get list of all pairs of resources and policies that apply to the resource.
# 2. For each pair, get a list of applicable rules by:
#   a. Checking if a rule applies to the specific resource.
#   b. Checking each parent in the hierarchy for a rule that applies to that parent.
#     See: https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy
#   c. Return the first applicable rules.
# 3. Check if the policy matches all of the "match_policies" defined in the rule.
#     If it does not, then this creates a RuleViolation.
rules:

    # This rule will trigger on policies that do not match the required policy.
    #
    # Example triggering firewall rules:
    # [
    #   {
    #     "name": "firewall1",
    #     "network": "https://www.googleapis.com/compute/v1/projects/yourproject/global/networks/default",
    #     "priority": 1000,
    #     "sourceRanges": [
    #       "10.0.0.0/8",
    #       ],
    #     "allowed": [
    #       {
    #         "IPProtocol": "tcp",
    #         "ports": ["22"]
    #       }
    #     ],
    #     "direction": "INGRESS",
    #   },
    #   {
    #     "name": "firewall2",
    #     "network": "https://www.googleapis.com/compute/v1/projects/yourproject/global/networks/default",
    #     "priority": 1000,
    #     "sourceRanges": [
    #       "10.0.0.0/8",
    #       ],
    #     "allowed": [
    #       {
    #         "IPProtocol": "tcp",
    #         "ports": ["80", "443"]
    #       }
    #     ],
    #     "direction": "INGRESS",
    #   },
    # ]
    # Example firewall rule that WON'T trigger:
    # [
    #   {
    #     "name": "firewall1",
    #     "network": "https://www.googleapis.com/compute/v1/projects/yourproject/global/networks/default",
    #     "priority": 1000,
    #     "sourceRanges": [
    #       "10.0.0.0/8",
    #       ],
    #     "allowed": [
    #       {
    #         "IPProtocol": "tcp",
    #         "ports": ["22"]
    #       }
    #     ],
    #     "direction": "INGRESS",
    #   },
    #   {
    #     "name": "firewall2",
    #     "network": "https://www.googleapis.com/compute/v1/projects/yourproject/global/networks/default",
    #     "priority": 1000,
    #     "sourceRanges": [
    #       "10.0.0.0/8",
    #       ],
    #     "targetTags": ["http-server", "https-server"],
    #     "allowed": [
    #       {
    #         "IPProtocol": "tcp",
    #         "ports": ["80", "443"]
    #       }
    #     ],
    #     "direction": "INGRESS",
    #   },
    # ]
  - rule_id: 'golden_policy'
    description: Instances with internal tag must have a specific policy
    mode: matches
    match_policies:
      - name: 'firewall1'
        network: 'default'
        direction: ingress
        targetTags: 'internal'
        allowed:
          - IPProtocol: 'TCP'
            ports:
              - '22'
        sourceRanges:
          - '10.0.0.0/8'
      - name: 'firewall2'
        network: 'default'
        direction: ingress
        targetTags: 'internal'
        allowed:
          - IPProtocol: 'TCP'
            ports:
              - '80'
              - '443'
        sourceRanges:
          - '10.0.0.0/8'
        targetTags:
          - 'http-server'
          - 'https-server'
    verify_policies:

org_policy:
  resources:
    - type: organization
      resource_ids:
        - YOUR_ORG_ID
      rules:
        rule_ids:
          - 'golden_policy'
