# Copyright 2017 The Forseti Security Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file contains several example blacklist firewall rules.
# 
# Blacklist rules are evaluated in the following steps:
# 1. Get list of all pairs of resources and policies that apply to the resource.
# 2. For each pair, get a list of applicable rules by:
#   a. Checking if a rule applies to the specific resource.
#   b. Checking each parent in the hierarchy for a rule that applies to that parent.
#     See: https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy
#   c. Return the first applicable rules.
# 3. For each applicable rule, check if the policy is a superset of one of the "match_policies" defined in the rule.
# 4. For any rule with a matching policy, check if the policy is a superset of any of the "verify_policies"
#     if it is, create a RuleViolation.
rules:

    # This rule will trigger on policies that allow ingress for any protocol or port.
    #
    # Example triggering firewall rule:
    #   {
    #     "name": "firewall1",
    #     "network": "https://www.googleapis.com/compute/v1/projects/yourproject/global/networks/default",
    #     "priority": 1000,
    #     "sourceRanges": ["0.0.0.0/0"],
    #     "allowed": [
    #       {
    #         "IPProtocol": "all",
    #       }
    #     ],
    #     "direction": "INGRESS",
    #   }
    #
    # Example firewall rule that WON'T trigger:
    #   {
    #     "name": "firewall2",
    #     "network": "https://www.googleapis.com/compute/v1/projects/yourproject/global/networks/default",
    #     "priority": 1000,
    #     "sourceRanges": ["0.0.0.0/0"],
    #     "allowed": [
    #       {
    #         "IPProtocol": "all",
    #       }
    #     ],
    #     "direction": "EGRESS",
    #   }
  - rule_id: 'prevent_allow_all_ingress'
    description: Detect allow ingress to all policies
    mode: blacklist
    match_policies:
      - direction: ingress
        allowed: ['*']
    verify_policies:
      - allowed:
        - IPProtocol: 'all'

    # This rule will trigger on policies that expose all ports for either TCP or UDP.
    #
    # Example triggering firewall rule:
    #   {
    #     "name": "firewall1",
    #     "network": "https://www.googleapis.com/compute/v1/projects/yourproject/global/networks/default",
    #     "priority": 1000,
    #     "sourceRanges": ["10.0.0.0/8"],
    #     "allowed": [
    #       {
    #         "IPProtocol": "tcp",
    #         "ports": ["all"]
    #       }
    #     ],
    #     "direction": "INGRESS",
    #   }
    #
    # Example firewall rule that WON'T trigger:
    #   {
    #     "name": "firewall2",
    #     "network": "https://www.googleapis.com/compute/v1/projects/yourproject/global/networks/default",
    #     "priority": 1000,
    #     "sourceRanges": ["10.0.0.0/8"],
    #     "denied": [
    #       {
    #         "IPProtocol": "tcp",
    #         "ports": ["all"]
    #       }
    #     ],
    #     "direction": "INGRESS",
    #   }
  - rule_id: 'disallow_all_ports'
    description: Don't allow policies that expose every port
    mode: blacklist
    match_policies:
      - direction: ingress
        allowed: ['*']
    verify_policies:
      - allowed:
        - IPProtocol: 'tcp'
          ports:
            - 'all'
      - allowed:
        - IPProtocol: 'udp'
          ports:
            - 'all'

    # This rule will trigger on policies that allow 3389 to a machine tagged with linux.
    #
    # Example triggering firewall rule:
    #  {
    #    "name": "firewall1",
    #    "network": "https://www.googleapis.com/compute/v1/projects/yourproject/global/networks/default",
    #    "priority": 1000,
    #    "sourceRanges": ["0.0.0.0/0"],
    #    "targetTags": ["linux"],
    #    "allowed": [
    #      {
    #        "IPProtocol": "tcp",
    #        "ports": ["3389"]
    #      }
    #    ],
    #  }
    #
    # Example firewall rule that WON'T trigger:
    #
    #  {
    #    "name": "firewall2",
    #    "network": "https://www.googleapis.com/compute/v1/projects/yourproject/global/networks/default",
    #    "priority": 1000,
    #    "sourceRanges": ["0.0.0.0/0"],
    #    "targetTags": ["notlinux"],
    #    "allowed": [
    #      {
    #        "IPProtocol": "tcp",
    #        "ports": ["3389"]
    #      }
    #    ],
    #  }
  - rule_id: 'no_rdp_to_linux'
    description: Don't allow RDP on Linux machines
    mode: blacklist
    match_policies:
      - direction: ingress
        allowed: ['*']
        targetTags:
          - 'linux'
    verify_policies:
      - allowed:
        - IPProtocol: 'tcp'
          ports:
            - '3389'

org_policy:
  resources:
    - type: organization
      resource_ids:
        - YOUR_ORG_ID
      rules:
        rule_ids:
          - 'prevent_allow_all_ingress'
          - 'disallow_all_ports'
          - 'no_rdp_to_linux'
