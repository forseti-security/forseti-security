# Copyright 2017 The Forseti Security Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is an input file that is used by the Forseti prerequisites setup
# wizard to generate an actual forseti_conf.yaml. It's better to work off
# the forseti_conf.yaml.sample than this one if you are editing the config
# by hand.
global:

    # Remove or comment out the email properties if you do not want Forseti to
    # send email notifications.
    email_recipient: rec@forseti_test_gmail.com
    email_sender: send@forseti_test_gmail.com
    sendgrid_api_key: TESTING_API_KEY

##############################################################################

inventory:

    # Root resource to start crawling from, formatted as
    # <resource_type>/<resource_id>, (e.g. "organizations/12345677890")
    root_resource_id: organizations/12345677890

    # gsuite access
    gsuite_service_account_key_file: /home/ubuntu/gsuite_key.json
    domain_super_admin_email: test@forseti_test_gmail.com

    api_quota:
        admin:
          max_calls: 14
          period: 1.0
        appengine:
          max_calls: 18
          period: 1.0
        bigquery:
          max_calls: 160
          period: 1.0
        cloudbilling:
          max_calls: 5
          period: 1.2  # Include some room for retries
        compute:
          max_calls: 18
          period: 1
        container:
          max_calls: 9
          period: 1
        crm:
          max_calls: 4
          period: 1.2
        iam:
          max_calls: 18
          period: 1
        servicemanagement:
          max_calls: 2
          period: 1.1
        sqladmin:
          max_calls: 1
          period: 1.1

##############################################################################

scanner:

    # Valid values are: debug, info, warning, error
    loglevel: info

    # Output path (do not include filename).
    # If GCS location, the format of the path should be:
    # gs://bucket-name/path/for/output
    output_path: gs://TESTING_BUCKET/scanner_violations

    # Rules path (do not include filename).
    # If GCS location, the format of the path should be:
    # gs://bucket-name/path/for/rules_path
    # if no rules_path is specified, rules are
    # searched in /path/to/forseti_security/rules/
    rules_path: /home/ubuntu/forseti-security/rules

    # Enable the scanners as default to true when integrated for Forseti 2.0.

    scanners:
        - name: bigquery
          enabled: false
        - name: blacklist
          enabled: true
        - name: bucket_acl
          enabled: false
        - name: cloudsql_acl
          enabled: false
        - name: firewall_rule
          enabled: true
        - name: forwarding_rule
          enabled: true
        - name: ke_version_scanner
          enabled: true
        - name: group
          enabled: false
        - name: iam_policy
          enabled: true
        - name: iap
          enabled: true
        - name: instance_network_interface
          enabled: true


##############################################################################

notifier:

    # For every resource type you can set up a notification pipeline
    # to send alerts for every violation found
    resources:
        - resource: policy_violations
          should_notify: false
          notifiers:
            # Email violations
            - name: email_violations
              configuration:
                sendgrid_api_key: TESTING_API_KEY
                sender: send@forseti_test_gmail.com
                recipient: rec@forseti_test_gmail.com
            # Upload violations to GCS.
            - name: gcs_violations
              configuration:
                # gcs_path should begin with "gs://"
                gcs_path: gs://TESTING_BUCKET/scanner_violations
            # Slack webhook pipeline.
            # Create an incoming webhook in your organization's Slack setting, located at:
            # https://[your_org].slack.com/apps/manage/custom-integrations
            # Add the provided URL in the configuration below in `webhook_url`.
            - name: slack_webhook
              configuration:
                webhook_url: ''

        - resource: bigquery_acl_violations
          should_notify: true
          notifiers:
            # Upload violations to GCS.
            - name: gcs_violations
              configuration:
                # gcs_path should begin with "gs://"
                gcs_path: gs://TESTING_BUCKET/scanner_violations

        - resource: blacklist_violations
          should_notify: true
          notifiers:
            # Upload violations to GCS.
            - name: gcs_violations
              configuration:
                # gcs_path should begin with "gs://"
                gcs_path: gs://TESTING_BUCKET/scanner_violations

        - resource: buckets_acl_violations
          should_notify: true
          notifiers:
            # Upload violations to GCS.
            - name: gcs_violations
              configuration:
                # gcs_path should begin with "gs://"
                gcs_path: gs://TESTING_BUCKET/scanner_violations

        - resource: cloudsql_acl_violations
          should_notify: true
          notifiers:
            # Upload violations to GCS.
            - name: gcs_violations
              configuration:
                # gcs_path should begin with "gs://"
                gcs_path: gs://TESTING_BUCKET/scanner_violations

        - resource: firewall_rule_violations
          should_notify: false
          notifiers:
            # Upload violations to GCS.
            - name: gcs_violations
              configuration:
                # gcs_path should begin with "gs://"
                gcs_path: gs://TESTING_BUCKET/scanner_violations

        - resource: forwarding_rule_violations
          should_notify: true
          notifiers:
            # Upload violations to GCS.
            - name: gcs_violations
              configuration:
                # gcs_path should begin with "gs://"
                gcs_path: gs://TESTING_BUCKET/scanner_violations

        - resource: ke_version_violations
          should_notify: true
          notifiers:
            # Upload violations to GCS.
            - name: gcs_violations
              configuration:
                # gcs_path should begin with "gs://"
                gcs_path: gs://TESTING_BUCKET/scanner_violations

        - resource: groups_violations
          should_notify: false
          notifiers:
            # Upload violations to GCS.
            - name: gcs_violations
              configuration:
                # gcs_path should begin with "gs://"
                gcs_path: gs://TESTING_BUCKET/scanner_violations

        - resource: instance_network_interface_violations
          should_notify: false
          notifiers:
            # Upload violations to GCS.
            - name: gcs_violations
              configuration:
                # gcs_path should begin with "gs://"
                gcs_path: gs://TESTING_BUCKET/scanner_violations
