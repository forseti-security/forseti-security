{
  "batchPath": "batch",
  "title": "Cloud Security Command Center API",
  "ownerName": "Google",
  "resources": {
    "organizations": {
      "resources": {
        "assets": {
          "methods": {
            "search": {
              "description": "Search assets within an organization.",
              "request": {
                "$ref": "SearchAssetsRequest"
              },
              "response": {
                "$ref": "SearchAssetsResponse"
              },
              "parameterOrder": [
                "orgName"
              ],
              "httpMethod": "POST",
              "parameters": {
                "orgName": {
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "description": "Name of the organization to search for assets. Its format is\n\"organizations/[organization_id]\". For example, \"organizations/1234\".",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha3/organizations/{organizationsId}/assets:search",
              "path": "v1alpha3/{+orgName}/assets:search",
              "id": "securitycenter.organizations.assets.search"
            },
            "modify": {
              "description": "Modifies the marks on the specified asset.",
              "request": {
                "$ref": "ModifyAssetRequest"
              },
              "response": {
                "$ref": "Asset"
              },
              "parameterOrder": [
                "orgName",
                "id"
              ],
              "httpMethod": "POST",
              "parameters": {
                "orgName": {
                  "description": "Organization name.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                },
                "id": {
                  "description": "Unique identifier for the asset to be modified.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha3/organizations/{organizationsId}/assets/{id}:modify",
              "path": "v1alpha3/{+orgName}/assets/{id}:modify",
              "id": "securitycenter.organizations.assets.modify"
            }
          }
        },
        "findings": {
          "methods": {
            "create": {
              "response": {
                "$ref": "Finding"
              },
              "parameterOrder": [
                "orgName"
              ],
              "httpMethod": "POST",
              "parameters": {
                "orgName": {
                  "description": "Name of the organization to search for assets. Its format is\n\"organizations/[organization_id]\". For example, \"organizations/1234\".",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha3/organizations/{organizationsId}/findings",
              "path": "v1alpha3/{+orgName}/findings",
              "id": "securitycenter.organizations.findings.create",
              "description": "Creates a finding. Creating the same finding with a later event_time will\nupdate the existing one. Cloud SCC provides the capability for users to\nsearch findings based on timestamps.",
              "request": {
                "$ref": "CreateFindingRequest"
              }
            },
            "search": {
              "description": "Search findings within an organization.",
              "request": {
                "$ref": "SearchFindingsRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "orgName"
              ],
              "response": {
                "$ref": "SearchFindingsResponse"
              },
              "parameters": {
                "orgName": {
                  "location": "path",
                  "description": "The name of the organization to which the findings belong. Its format is\n\"organizations/[organization_id]\". For example, \"organizations/1234\".",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha3/organizations/{organizationsId}/findings:search",
              "id": "securitycenter.organizations.findings.search",
              "path": "v1alpha3/{+orgName}/findings:search"
            },
            "modify": {
              "description": "Modifies the changeable parts of the specified finding.",
              "request": {
                "$ref": "ModifyFindingRequest"
              },
              "response": {
                "$ref": "Finding"
              },
              "parameterOrder": [
                "orgName",
                "id"
              ],
              "httpMethod": "POST",
              "parameters": {
                "id": {
                  "location": "path",
                  "description": "ID of the finding.",
                  "required": true,
                  "type": "string"
                },
                "orgName": {
                  "description": "Organization name.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha3/organizations/{organizationsId}/findings/{id}:modify",
              "path": "v1alpha3/{+orgName}/findings/{id}:modify",
              "id": "securitycenter.organizations.findings.modify"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json"
    }
  },
  "version": "v1alpha3",
  "baseUrl": "https://securitycenter.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "The public Cloud Security Command Center API.",
  "servicePath": "",
  "basePath": "",
  "id": "securitycenter:v1alpha3",
  "revision": "20180625",
  "documentationLink": "https://console.cloud.google.com/apis/api/securitycenter.googleapis.com/overview",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "SourceFinding": {
      "description": "Representation of a source's finding.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "`Key: value` pairs provided by the source. Indexing will be provided\nfor each key.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "url": {
          "description": "An https url provided by the source for users to click on to see more\ninformation, used for UI navigation.",
          "type": "string"
        },
        "marks": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User specified marks placed on the finding.\nNote: This field is used in responses only. Any value specified here in a\nrequest is ignored.",
          "type": "object"
        },
        "attributes": {
          "description": "Dynamically calculated attributes provided by Google.\nFor example, first_discovered, create_time.\nNote: This field is used in responses only. Any value specified here in a\nrequest is ignored.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "id": {
          "description": "Required field, an organization & source unique immutable identifier\nprovided by the sources.",
          "type": "string"
        },
        "category": {
          "description": "Required field, category of a finding, this is a custom string field. In\ngeneral, sources have logical groupings for their findings. For example,\nthe Data Loss Prevention Scanner has the following types: \"SSN\",\n\"US passport\", \"credit card number\", and so on. This field is indexed and\nused by Cloud SCC frontend for data visualization. It's also useful for\nreporting and analysis. It's recommended to populate this field\nconsistently.",
          "type": "string"
        },
        "sourceId": {
          "description": "Required field, ID of the finding source. A source is a producer of\nsecurity findings and source IDs are namespaced under each organization.\nFor Google integrated sources, please use their official source IDs for\nbetter frontend integration. For custom sources, choose an ID that doesn't\nconflict with any existing IDs.",
          "type": "string"
        },
        "eventTime": {
          "description": "Time when the finding was generated by the source.",
          "format": "google-datetime",
          "type": "string"
        },
        "assetIds": {
          "description": "Required field, list of IDs of affected assets. These IDs should strictly\nmap to one of the existing asset IDs in the asset inventory for the\norganization, which is populated by Cloud SCC backend. If the ID doesn't\nmap to one of the existing asset IDs, the result is a NOT_FOUND error.\nAsset types must be supported by Cloud SCC. It's best to pick the most\ngranular asset type. For example, if a file in a VM instance is affected,\npick the asset ID of the VM instance. This works best because file isn't a\nsupported asset type in Cloud SCC, and project ID is too broad.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "SourceFinding"
    },
    "ModifyAssetRequest": {
      "description": "Request message for modifying the marks on an asset.",
      "type": "object",
      "properties": {
        "removeMarksWithKeys": {
          "description": "A list of keys defining the marks to remove from the asset. There can be no\noverlaps between keys to remove and keys to add or update.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addOrUpdateMarks": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Keys and values to add/update on the asset.\n\nIf a mark with the same key already exists, its value will be replaced by\nthe updated value.",
          "type": "object"
        }
      },
      "id": "ModifyAssetRequest"
    },
    "SearchFindingsRequest": {
      "properties": {
        "pageSize": {
          "description": "The maximum number of results to return.",
          "format": "int32",
          "type": "integer"
        },
        "referenceTime": {
          "description": "The reference point used to determine the findings at a specific\npoint in time.\nQueries with the timestamp in the future are rounded down to the\ncurrent time on the server. If the value is not given, \"now\" is going to\nbe used implicitly.",
          "format": "google-datetime",
          "type": "string"
        },
        "query": {
          "description": "Expression that defines the query to apply across findings.\nThe expression is a list of one or more restrictions combined via logical\noperators `AND` and `OR`.\nParentheses are supported, and in absence of parentheses `OR` has higher\nprecedence than `AND`.\n\nRestrictions have the form `\u003cfield\u003e \u003coperator\u003e \u003cvalue\u003e` and may have a `-`\ncharacter in front of them to indicate negation. The fields can be of the\nfollowing types:\n\n* Attribute - optional `attribute.` prefix or no prefix and name.\n* Property - mandatory `property.` prefix and name.\n* Mark - mandatory `mark` prefix and name.\n\nThe supported operators are:\n\n* `=` for all value types.\n* `\u003e`, `\u003c`, `\u003e=`, `\u003c=` for integer values.\n* `:`, meaning substring matching, for strings.\n\nThe supported value types are:\n\n* string literals in quotes.\n* integer literals without quotes.\n* boolean literals `true` and `false` without quotes.\n\nFor example, `property.count = 100` is a valid query string.",
          "type": "string"
        },
        "orderBy": {
          "description": "Expression that defines what fields and order to use for sorting.",
          "type": "string"
        },
        "pageToken": {
          "description": "Optional pagination token returned in an earlier call.",
          "type": "string"
        }
      },
      "id": "SearchFindingsRequest",
      "description": "Request message for SearchFindings.",
      "type": "object"
    },
    "SearchFindingsResponse": {
      "description": "Response message for SearchFindings.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more\nresults.",
          "type": "string"
        },
        "totalSize": {
          "description": "The total number of findings irrespective of pagination.",
          "format": "int32",
          "type": "integer"
        },
        "findings": {
          "description": "Findings returned by the request.",
          "type": "array",
          "items": {
            "$ref": "Finding"
          }
        },
        "referenceTime": {
          "description": "Time provided for reference_time in the request.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "SearchFindingsResponse"
    },
    "SearchAssetsResponse": {
      "description": "Response message for SearchAssets.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more\nresults.",
          "type": "string"
        },
        "assets": {
          "description": "Assets returned by the request.",
          "type": "array",
          "items": {
            "$ref": "Asset"
          }
        },
        "totalSize": {
          "description": "The total number of results available.",
          "format": "uint64",
          "type": "string"
        },
        "referenceTime": {
          "description": "Time provided for reference_time in the request.",
          "format": "google-datetime",
          "type": "string"
        },
        "compareDuration": {
          "description": "Time provided for compare_duration in the request.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "SearchAssetsResponse"
    },
    "CreateFindingRequest": {
      "description": "Request message for CreatingFinding.",
      "type": "object",
      "properties": {
        "sourceFinding": {
          "description": "The source finding to be created.",
          "$ref": "SourceFinding"
        }
      },
      "id": "CreateFindingRequest"
    },
    "Finding": {
      "properties": {
        "properties": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Properties associated with the finding.",
          "type": "object"
        },
        "marks": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User specified marks placed on the finding.",
          "type": "object"
        },
        "scannerId": {
          "description": "Unique identifier for the scanner that produced the finding.",
          "type": "string"
        },
        "updateTime": {
          "description": "Time at which this finding was last updated. This does not include updates\non user specified marks.",
          "format": "google-datetime",
          "type": "string"
        },
        "assetId": {
          "description": "Unique identifier for the asset the finding relates to.",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for this finding. The same finding and identifier can\nappear at multiple points in time.",
          "type": "string"
        }
      },
      "id": "Finding",
      "description": "Representation of a scanner's finding.",
      "type": "object"
    },
    "ModifyFindingRequest": {
      "description": "Request message for ModifyFinding.",
      "type": "object",
      "properties": {
        "addOrUpdateMarks": {
          "description": "Keys and values to add or update on the finding.\nIf a mark with the same key already exists, its value will be replaced by\nthe updated value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "removeMarksWithKeys": {
          "description": "A list of keys defining the marks to remove from the finding. There can be\nno overlaps between keys to remove and keys to add or update.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ModifyFindingRequest"
    },
    "SearchAssetsRequest": {
      "description": "Request message for SearchAssets.",
      "type": "object",
      "properties": {
        "orderBy": {
          "description": "Expression that defines what fields and order to use for sorting.",
          "type": "string"
        },
        "compareDuration": {
          "description": "When compare_duration is set, the Asset's \"state\" attribute is updated to\nindicate whether the asset was added, removed, or remained present during\nthe compare_duration period of time that precedes the reference_time. This\nis the time between (reference_time - compare_duration) and reference_time.\n\nThe state value is derived based on the presence of the asset at the two\npoints in time. Intermediate state changes between the two times don't\naffect the result. For example, the results aren't affected if the asset is\nremoved and re-created again.\n\nPossible \"state\" values when compare_duration is specified:\n\n* \"ADDED\": indicates that the asset was not present before\n             compare_duration, but present at reference_time.\n* \"REMOVED\": indicates that the asset was present at the start of\n             compare_duration, but not present at reference_time.\n* \"ACTIVE_AT_BOTH\": indicates that the asset was present at both the\n             start and the end of the time period defined by\n             compare_duration and reference_time.\n\nIf compare_duration is not specified, then the only possible state is\n\"ACTIVE\", which indicates that the asset is present at reference_time.",
          "format": "google-duration",
          "type": "string"
        },
        "pageToken": {
          "description": "Optional pagination token returned in an earlier call.",
          "type": "string"
        },
        "pageSize": {
          "description": "The maximum number of results to return in a single response.",
          "format": "int32",
          "type": "integer"
        },
        "referenceTime": {
          "description": "Time at which to search for assets. The search will capture the state of\nassets at this point in time.\n\nNot providing a value or providing one in the future is treated as current.",
          "format": "google-datetime",
          "type": "string"
        },
        "query": {
          "description": "Expression that defines the query to apply across assets.\nThe expression is a list of one or more restrictions combined via logical\noperators `AND` and `OR`.\nParentheses are not supported, and `OR` has higher precedence than `AND`.\n\nRestrictions have the form `\u003cfield\u003e \u003coperator\u003e \u003cvalue\u003e` and may have a `-`\ncharacter in front of them to indicate negation. The fields can be of the\nfollowing types:\n\n* Attribute: optional `attribute.` prefix or no prefix and name.\n* Property: mandatory `property.` prefix and name.\n* Mark: mandatory `mark` prefix and name.\n\nThe supported operators are:\n\n* `=` for all value types.\n* `\u003e`, `\u003c`, `\u003e=`, `\u003c=` for integer values.\n* `:`, meaning substring matching, for strings.\n\nThe supported value types are:\n\n* string literals in quotes.\n* integer literals without quotes.\n* boolean literals `true` and `false` without quotes.\n\nFor example, `property.count = 100` is a valid query string.",
          "type": "string"
        }
      },
      "id": "SearchAssetsRequest"
    },
    "Asset": {
      "description": "Representation of a Google Cloud Platform asset. Examples of assets include:\nApp Engine Application, Project, Bucket, and so on.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties associated with the asset.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "parentId": {
          "description": "Unique identifier for this asset's parent. For example, a Project's parent\nwould be either the organization it belongs to OR the folder it resides in.",
          "type": "string"
        },
        "marks": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User specified marks placed on the asset.",
          "type": "object"
        },
        "state": {
          "enumDescriptions": [
            "Invalid state.",
            "Asset was active for the point in time.",
            "Asset was not found for the point(s) in time.",
            "Asset was added between the points in time.",
            "Asset was removed between the points in time.",
            "Asset was active at both point(s) in time."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "NOT_FOUND",
            "ADDED",
            "REMOVED",
            "ACTIVE_AT_BOTH"
          ],
          "description": "State of the asset.",
          "type": "string"
        },
        "updateTime": {
          "description": "The time at which the asset was last updated, added, or deleted in\nCloud SCC.",
          "format": "google-datetime",
          "type": "string"
        },
        "type": {
          "description": "The type of asset. Examples include: APPLICATION, PROJECT, and\nORGANIZATION.",
          "type": "string"
        },
        "owners": {
          "description": "Owners of the asset. Commonly represented as email addresses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "description": "Unique identifier for this asset. This identifier persists following\nmodification, deletion, or recreation.",
          "type": "string"
        }
      },
      "id": "Asset"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "canonicalName": "Security Command Center",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://securitycenter.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "securitycenter"
}
