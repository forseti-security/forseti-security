{
  "version": "v1beta1",
  "baseUrl": "https://cloudasset.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "The cloud asset API manages the history and inventory of cloud resources.",
  "servicePath": "",
  "basePath": "",
  "id": "cloudasset:v1beta1",
  "documentationLink": "https://console.cloud.google.com/apis/api/cloudasset.googleapis.com/overview",
  "revision": "20180904",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "Condition": {
      "properties": {
        "op": {
          "enum": [
            "NO_OP",
            "EQUALS",
            "NOT_EQUALS",
            "IN",
            "NOT_IN",
            "DISCHARGED"
          ],
          "description": "An operator to apply the subject with.",
          "type": "string",
          "enumDescriptions": [
            "Default no-op.",
            "DEPRECATED. Use IN instead.",
            "DEPRECATED. Use NOT_IN instead.",
            "The condition is true if the subject (or any element of it if it is\na set) matches any of the supplied values.",
            "The condition is true if the subject (or every element of it if it is\na set) matches none of the supplied values.",
            "Subject is discharged"
          ]
        },
        "svc": {
          "description": "Trusted attributes discharged by the service.",
          "type": "string"
        },
        "sys": {
          "enumDescriptions": [
            "Default non-attribute type",
            "Region of the resource",
            "Service name",
            "Resource name",
            "IP address of the caller"
          ],
          "enum": [
            "NO_ATTR",
            "REGION",
            "SERVICE",
            "NAME",
            "IP"
          ],
          "description": "Trusted attributes supplied by any service that owns resources and uses\nthe IAM system for access control.",
          "type": "string"
        },
        "value": {
          "description": "DEPRECATED. Use 'values' instead.",
          "type": "string"
        },
        "values": {
          "description": "The objects of the condition. This is mutually exclusive with 'value'.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "iam": {
          "enum": [
            "NO_ATTR",
            "AUTHORITY",
            "ATTRIBUTION",
            "SECURITY_REALM",
            "APPROVER",
            "JUSTIFICATION_TYPE",
            "CREDENTIALS_TYPE"
          ],
          "description": "Trusted attributes supplied by the IAM system.",
          "type": "string",
          "enumDescriptions": [
            "Default non-attribute.",
            "Either principal or (if present) authority selector.",
            "The principal (even if an authority selector is present), which\nmust only be used for attribution, not authorization.",
            "Any of the security realms in the IAMContext (go/security-realms).\nWhen used with IN, the condition indicates \"any of the request's realms\nmatch one of the given values; with NOT_IN, \"none of the realms match\nany of the given values\". Note that a value can be:\n - 'self' (i.e., allow connections from clients that are in the same\n security realm)\n - a realm (e.g., 'campus-abc')\n - a realm group (e.g., 'realms-for-borg-cell-xx', see: go/realm-groups)\nA match is determined by a realm group\nmembership check performed by a RealmAclRep object (go/realm-acl-howto).\nIt is not permitted to grant access based on the *absence* of a realm, so\nrealm conditions can only be used in a \"positive\" context (e.g., ALLOW/IN\nor DENY/NOT_IN).",
            "An approver (distinct from the requester) that has authorized this\nrequest.\nWhen used with IN, the condition indicates that one of the approvers\nassociated with the request matches the specified principal, or is a\nmember of the specified group. Approvers can only grant additional\naccess, and are thus only used in a strictly positive context\n(e.g. ALLOW/IN or DENY/NOT_IN).",
            "What types of justifications have been supplied with this request.\nString values should match enum names from tech.iam.JustificationType,\ne.g. \"MANUAL_STRING\". It is not permitted to grant access based on\nthe *absence* of a justification, so justification conditions can only\nbe used in a \"positive\" context (e.g., ALLOW/IN or DENY/NOT_IN).\n\nMultiple justifications, e.g., a Buganizer ID and a manually-entered\nreason, are normal and supported.",
            "What type of credentials have been supplied with this request.\nString values should match enum names from\nsecurity_loas_l2.CredentialsType - currently, only CREDS_TYPE_EMERGENCY\nis supported.\nIt is not permitted to grant access based on the *absence* of a\ncredentials type, so the conditions can only be used in a \"positive\"\ncontext (e.g., ALLOW/IN or DENY/NOT_IN)."
          ]
        }
      },
      "id": "Condition",
      "description": "A condition to be met.",
      "type": "object"
    },
    "CounterOptions": {
      "description": "Increment a streamz counter with the specified metric and field names.\n\nMetric names should start with a '/', generally be lowercase-only,\nand end in \"_count\". Field names should not contain an initial slash.\nThe actual exported metric names will have \"/iam/policy\" prepended.\n\nField names correspond to IAM request parameters and field values are\ntheir respective values.\n\nAt present the only supported field names are\n   - \"iam_principal\", corresponding to IAMContext.principal;\n   - \"\" (empty string), resulting in one aggretated counter with no field.\n\nExamples:\n  counter { metric: \"/debug_access_count\"  field: \"iam_principal\" }\n  ==\u003e increment counter /iam/policy/backend_debug_access_count\n                        {iam_principal=[value of IAMContext.principal]}\n\nAt this time we do not support:\n* multiple field names (though this may be supported in the future)\n* decrementing the counter\n* incrementing it by anything other than 1",
      "type": "object",
      "properties": {
        "metric": {
          "description": "The metric to update.",
          "type": "string"
        },
        "field": {
          "description": "The field value to attribute.",
          "type": "string"
        }
      },
      "id": "CounterOptions"
    },
    "AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:foo@gmail.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\nfoo@gmail.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "description": "The log type that this config enables.",
          "type": "string"
        }
      },
      "id": "AuditLogConfig"
    },
    "GcsDestination": {
      "description": "A Google Cloud Storage (GCS) location.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "The path of the GCS objects. It's the same path that is used by gsutil, for\nexample: \"gs://bucket_name/object_path\". See:\nhttps://cloud.google.com/storage/docs/viewing-editing-metadata for more\ninformation.",
          "type": "string"
        }
      },
      "id": "GcsDestination"
    },
    "Rule": {
      "properties": {
        "notIn": {
          "description": "If one or more 'not_in' clauses are specified, the rule matches\nif the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries.\nThe format for in and not_in entries can be found at in the Local IAM\ndocumentation (see go/local-iam#features).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Human-readable description of the rule.",
          "type": "string"
        },
        "conditions": {
          "description": "Additional restrictions that must be met. All conditions must pass for the\nrule to match.",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "logConfig": {
          "description": "The config returned to callers of tech.iam.IAM.CheckPolicy for any entries\nthat match the LOG action.",
          "type": "array",
          "items": {
            "$ref": "LogConfig"
          }
        },
        "in": {
          "description": "If one or more 'in' clauses are specified, the rule matches if\nthe PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "permissions": {
          "description": "A permission is a string of form '\u003cservice\u003e.\u003cresource type\u003e.\u003cverb\u003e'\n(e.g., 'storage.buckets.list'). A value of '*' matches all permissions,\nand a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "enum": [
            "NO_ACTION",
            "ALLOW",
            "ALLOW_WITH_LOG",
            "DENY",
            "DENY_WITH_LOG",
            "LOG"
          ],
          "description": "Required",
          "type": "string",
          "enumDescriptions": [
            "Default no action.",
            "Matching 'Entries' grant access.",
            "Matching 'Entries' grant access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' deny access.",
            "Matching 'Entries' deny access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' tell IAM.Check callers to generate logs."
          ]
        }
      },
      "id": "Rule",
      "description": "A rule to be applied in a Policy.",
      "type": "object"
    },
    "Resource": {
      "properties": {
        "resourceUrl": {
          "description": "The REST URL for accessing the resource. An HTTP GET operation using this\nURL returns the resource itself.\nExample:\n`https://cloudresourcemanager.googleapis.com/v1/projects/my-project-123`.\nIt will be left unspecified for resources without a REST API.",
          "type": "string"
        },
        "discoveryName": {
          "description": "The JSON schema name listed in the discovery document.\nExample: \"Project\". It will be left unspecified for resources (such as\nCloud Bigtable) without a discovery-based API.",
          "type": "string"
        },
        "version": {
          "description": "The API version. Example: \"v1\".",
          "type": "string"
        },
        "data": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The content of the resource, in which some sensitive fields are scrubbed\naway and may not be present.",
          "type": "object"
        },
        "internalData": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The actual metadata content for the resource, only visible for internal\nusers.",
          "type": "object"
        },
        "discoveryDocumentUri": {
          "description": "The URL of the discovery document containing the resource's JSON schema.\nExample:\n\"https://www.googleapis.com/discovery/v1/apis/compute/v1/rest\".\nIt will be left unspecified for resources without a discovery-based API,\nsuch as Cloud Bigtable.",
          "type": "string"
        },
        "parent": {
          "description": "The full name of the immediate parent of this resource. See:\nhttps://cloud.google.com/apis/design/resource_names#full_resource_name\n\nFor GCP assets, it is the parent resource defined in the IAM policy\nhierarchy: https://cloud.google.com/iam/docs/overview#policy_hierarchy.\nExample: \"//cloudresourcemanager.googleapis.com/projects/my_project_123\".\n\nFor third-party assets, it is up to the users to define.",
          "type": "string"
        }
      },
      "id": "Resource",
      "description": "Representation of a cloud resource.",
      "type": "object"
    },
    "ExportAssetsRequest": {
      "description": "Export asset request.",
      "type": "object",
      "properties": {
        "assetTypes": {
          "description": "A list of asset types of which to take a snapshot for. Example:\n\"google.compute.disk\". If specified, only matching assets will be returned.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "readTime": {
          "description": "Timestamp to take an asset snapshot. This can only be set to a timestamp in\nthe past or of the current time. If not specified, the current time will be\nused. Due to delays in resource data collection and indexing, there is a\nvolatile window during which running the same query may get different\nresults.",
          "format": "google-datetime",
          "type": "string"
        },
        "contentType": {
          "enumDescriptions": [
            "Unspecified content type.",
            "Resource metadata.",
            "The actual IAM policy set on a resource.",
            "The IAM policy name for the IAM policy set on a resource."
          ],
          "enum": [
            "CONTENT_TYPE_UNSPECIFIED",
            "RESOURCE",
            "IAM_POLICY",
            "IAM_POLICY_NAME"
          ],
          "description": "Asset content type. If not specified, no content but the asset name will be\nreturned.",
          "type": "string"
        },
        "outputConfig": {
          "description": "Required. Output configuration indicating where the results will be output\nto. All results will be in newline delimited JSON format.",
          "$ref": "OutputConfig"
        }
      },
      "id": "ExportAssetsRequest"
    },
    "LogConfig": {
      "description": "Specifies what kind of log the caller must write",
      "type": "object",
      "properties": {
        "cloudAudit": {
          "description": "Cloud audit options.",
          "$ref": "CloudAuditOptions"
        },
        "counter": {
          "description": "Counter options.",
          "$ref": "CounterOptions"
        },
        "dataAccess": {
          "$ref": "DataAccessOptions",
          "description": "Data access options."
        }
      },
      "id": "LogConfig"
    },
    "Policy": {
      "properties": {
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten blindly.",
          "format": "byte",
          "type": "string"
        },
        "iamOwned": {
          "type": "boolean"
        },
        "rules": {
          "description": "If more than one rule is specified, the rules are applied in the following\nmanner:\n- All matching LOG rules are always applied.\n- If any DENY/DENY_WITH_LOG rule matches, permission is denied.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is\n  granted.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if no rule applies, permission is denied.",
          "type": "array",
          "items": {
            "$ref": "Rule"
          }
        },
        "version": {
          "description": "Deprecated.",
          "format": "int32",
          "type": "integer"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`.\n`bindings` with no members will result in an error.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        }
      },
      "id": "Policy",
      "description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` consists of a list of `bindings`. A `binding` binds a list of\n`members` to a `role`, where the members can be user accounts, Google groups,\nGoogle domains, and service accounts. A `role` is a named list of permissions\ndefined by IAM.\n\n**JSON Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/owner\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-other-app@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/viewer\",\n          \"members\": [\"user:sean@example.com\"]\n        }\n      ]\n    }\n\n**YAML Example**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-other-app@appspot.gserviceaccount.com\n      role: roles/owner\n    - members:\n      - user:sean@example.com\n      role: roles/viewer\n\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https://cloud.google.com/iam/docs).",
      "type": "object"
    },
    "AuthorizationLoggingOptions": {
      "properties": {
        "permissionType": {
          "enumDescriptions": [
            "Default. Should not be used.",
            "A read of admin (meta) data.",
            "A write of admin (meta) data.",
            "A read of standard data.",
            "A write of standard data."
          ],
          "enum": [
            "PERMISSION_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "ADMIN_WRITE",
            "DATA_READ",
            "DATA_WRITE"
          ],
          "description": "The type of the permission that was checked.",
          "type": "string"
        }
      },
      "id": "AuthorizationLoggingOptions",
      "description": "Authorization-related information used by Cloud Audit Logging.",
      "type": "object"
    },
    "DataAccessOptions": {
      "properties": {
        "logMode": {
          "enumDescriptions": [
            "Client is not required to write a partial Gin log immediately after\nthe authorization check. If client chooses to write one and it fails,\nclient may either fail open (allow the operation to continue) or\nfail closed (handle as a DENY outcome).",
            "The application's operation in the context of which this authorization\ncheck is being made may only be performed if it is successfully logged\nto Gin. For instance, the authorization library may satisfy this\nobligation by emitting a partial log entry at authorization check time\nand only returning ALLOW to the application if it succeeds.\n\nIf a matching Rule has this directive, but the client has not indicated\nthat it will honor such requirements, then the IAM check will result in\nauthorization failure by setting CheckPolicyResponse.success=false."
          ],
          "enum": [
            "LOG_MODE_UNSPECIFIED",
            "LOG_FAIL_CLOSED"
          ],
          "description": "Whether Gin logging should happen in a fail-closed manner at the caller.\nThis is relevant only in the LocalIAM implementation, for now.",
          "type": "string"
        }
      },
      "id": "DataAccessOptions",
      "description": "Write a Data Access (Gin) log",
      "type": "object"
    },
    "TimeWindow": {
      "description": "A time window of [start_time, end_time).",
      "type": "object",
      "properties": {
        "startTime": {
          "description": "Start time of the time window (inclusive).",
          "format": "google-datetime",
          "type": "string"
        },
        "endTime": {
          "description": "End time of the time window (exclusive).\nCurrent timestamp if not specified.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "TimeWindow"
    },
    "Operation": {
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations/some/unique/name`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object"
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object"
    },
    "AuditConfig": {
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:foo@gmail.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"fooservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:bar@gmail.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts foo@gmail.com from DATA_READ logging, and\nbar@gmail.com from DATA_WRITE logging.",
      "type": "object"
    },
    "Asset": {
      "description": "Cloud asset. This include all Google Cloud Platform resources, as well as\nIAM policies and other non-GCP assets.",
      "type": "object",
      "properties": {
        "assetType": {
          "description": "Type of the asset. Example: \"google.compute.disk\".",
          "type": "string"
        },
        "name": {
          "description": "The full name of the asset. See:\nhttps://cloud.google.com/apis/design/resource_names#full_resource_name\nExample:\n\"//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1\".",
          "type": "string"
        },
        "iamPolicy": {
          "description": "Representation of the actual IAM policy set on a cloud resource. For each\nresource, there must be at most one IAM policy set on it.",
          "$ref": "Policy"
        },
        "iamPolicyName": {
          "description": "IAM policy name of the IAM policy set on a cloud resource. For each\nresource, there must be at most one IAM policy name associated with it.",
          "format": "byte",
          "type": "string"
        },
        "resource": {
          "$ref": "Resource",
          "description": "Representation of the resource."
        }
      },
      "id": "Asset"
    },
    "TemporalAsset": {
      "description": "Temporal asset. In addition to the asset, the temporal asset includes the\nstatus of the asset and valid from and to time of it.",
      "type": "object",
      "properties": {
        "window": {
          "$ref": "TimeWindow",
          "description": "The time window when the asset data and state was observed."
        },
        "asset": {
          "description": "Asset.",
          "$ref": "Asset"
        },
        "deleted": {
          "description": "If the asset is deleted or not.",
          "type": "boolean"
        }
      },
      "id": "TemporalAsset"
    },
    "OutputConfig": {
      "properties": {
        "gcsDestination": {
          "$ref": "GcsDestination",
          "description": "Destination on Google Cloud Storage (GCS)."
        }
      },
      "id": "OutputConfig",
      "description": "Output configuration for export assets destination.",
      "type": "object"
    },
    "CloudAuditOptions": {
      "description": "Write a Cloud Audit log",
      "type": "object",
      "properties": {
        "authorizationLoggingOptions": {
          "$ref": "AuthorizationLoggingOptions",
          "description": "Information used by the Cloud Audit Logging pipeline."
        },
        "logName": {
          "enum": [
            "UNSPECIFIED_LOG_NAME",
            "ADMIN_ACTIVITY",
            "DATA_ACCESS"
          ],
          "description": "The log_name to populate in the Cloud Audit Record.",
          "type": "string",
          "enumDescriptions": [
            "Default. Should not be used.",
            "Corresponds to \"cloudaudit.googleapis.com/activity\"",
            "Corresponds to \"cloudaudit.googleapis.com/data_access\""
          ]
        }
      },
      "id": "CloudAuditOptions"
    },
    "BatchGetAssetsHistoryResponse": {
      "description": "Batch get assets history response.",
      "type": "object",
      "properties": {
        "assets": {
          "description": "A list of assets with valid time windows.",
          "type": "array",
          "items": {
            "$ref": "TemporalAsset"
          }
        }
      },
      "id": "BatchGetAssetsHistoryResponse"
    },
    "Status": {
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "type": "object"
    },
    "Binding": {
      "properties": {
        "condition": {
          "description": "Unimplemented. The condition that is associated with this binding.\nNOTE: an unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently.",
          "$ref": "Expr"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@gmail.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n\n* `domain:{domain}`: A Google Apps domain name that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      },
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object"
    },
    "Expr": {
      "properties": {
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.",
          "type": "string"
        },
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      },
      "id": "Expr",
      "description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) \u003e 0\"",
      "type": "object"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "canonicalName": "Cloud Asset",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://cloudasset.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "cloudasset",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud Asset API",
  "ownerName": "Google",
  "resources": {
    "projects": {
      "methods": {
        "exportAssets": {
          "description": "Exports assets with time and resource types to a given Google Cloud Storage\nlocation. The output format is newline-delimited JSON.\nThis API implements the google.longrunning.Operation API allowing users\nto keep track of the export.",
          "request": {
            "$ref": "ExportAssetsRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "parent"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "parent": {
              "pattern": "^projects/[^/]+$",
              "location": "path",
              "description": "Required. The relative name of the root asset. Can only be an organization\nnumber (such as \"organizations/123\"), or a project id (such as\n\"projects/my-project-id\") or a project number (such as \"projects/12345\").",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1beta1/projects/{projectsId}:exportAssets",
          "id": "cloudasset.projects.exportAssets",
          "path": "v1beta1/{+parent}:exportAssets"
        },
        "batchGetAssetsHistory": {
          "path": "v1beta1/{+parent}:batchGetAssetsHistory",
          "id": "cloudasset.projects.batchGetAssetsHistory",
          "description": "Batch gets assets update history that overlaps a time window.\nFor RESOURCE content, this API outputs history with asset in both\nnon-delete or deleted status.\nFor IAM_POLICY content, this API only outputs history when asset and its\nattached IAM POLICY both exist. So there may be gaps in the output history.",
          "response": {
            "$ref": "BatchGetAssetsHistoryResponse"
          },
          "parameterOrder": [
            "parent"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "parent": {
              "description": "Required. The relative name of the root asset. It can only be an\norganization number (such as \"organizations/123\"), or a project id (such as\n\"projects/my-project-id\")\"or a project number (such as \"projects/12345\").",
              "required": true,
              "type": "string",
              "pattern": "^projects/[^/]+$",
              "location": "path"
            },
            "assetNames": {
              "description": "A list of the full names of the assets. See:\nhttps://cloud.google.com/apis/design/resource_names#full_resource_name\nExample:\n\"//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1\".\n\nThe request becomes a no-op if the asset name list is empty, and the max\nsize of the asset name list is 100 in one request.",
              "type": "string",
              "repeated": true,
              "location": "query"
            },
            "contentType": {
              "enum": [
                "CONTENT_TYPE_UNSPECIFIED",
                "RESOURCE",
                "IAM_POLICY",
                "IAM_POLICY_NAME"
              ],
              "description": "Required. The content type.",
              "type": "string",
              "location": "query"
            },
            "readTimeWindow.endTime": {
              "description": "End time of the time window (exclusive).\nCurrent timestamp if not specified.",
              "format": "google-datetime",
              "type": "string",
              "location": "query"
            },
            "readTimeWindow.startTime": {
              "description": "Start time of the time window (inclusive).",
              "format": "google-datetime",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "v1beta1/projects/{projectsId}:batchGetAssetsHistory"
        }
      },
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the operation resource.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/operations/[^/]+/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/operations/{operationsId}/{operationsId1}",
              "path": "v1beta1/{+name}",
              "id": "cloudasset.projects.operations.get",
              "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."
            }
          }
        }
      }
    },
    "organizations": {
      "methods": {
        "batchGetAssetHistory": {
          "description": "Batch gets assets update history that overlaps a time window.\nFor RESOURCE content, this API outputs history with asset in both\nnon-delete or deleted status.\nFor IAM_POLICY content, this API only outputs history when asset and its\nattached IAM POLICY both exist. So there may be gaps in the output history.",
          "response": {
            "$ref": "BatchGetAssetsHistoryResponse"
          },
          "parameterOrder": [
            "parent"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "parent": {
              "description": "Required. The relative name of the root asset. It can only be an\norganization number (such as \"organizations/123\"), or a project id (such as\n\"projects/my-project-id\")\"or a project number (such as \"projects/12345\").",
              "required": true,
              "type": "string",
              "pattern": "^organizations/[^/]+$",
              "location": "path"
            },
            "assetNames": {
              "description": "A list of the full names of the assets. See:\nhttps://cloud.google.com/apis/design/resource_names#full_resource_name\nExample:\n\"//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1\".\n\nThe request becomes a no-op if the asset name list is empty, and the max\nsize of the asset name list is 100 in one request.",
              "type": "string",
              "repeated": true,
              "location": "query"
            },
            "contentType": {
              "enum": [
                "CONTENT_TYPE_UNSPECIFIED",
                "RESOURCE",
                "IAM_POLICY",
                "IAM_POLICY_NAME"
              ],
              "description": "Required. The content type.",
              "type": "string",
              "location": "query"
            },
            "readTimeWindow.endTime": {
              "description": "End time of the time window (exclusive).\nCurrent timestamp if not specified.",
              "format": "google-datetime",
              "type": "string",
              "location": "query"
            },
            "readTimeWindow.startTime": {
              "location": "query",
              "description": "Start time of the time window (inclusive).",
              "format": "google-datetime",
              "type": "string"
            }
          },
          "flatPath": "v1beta1/organizations/{organizationsId}:batchGetAssetHistory",
          "path": "v1beta1/{+parent}:batchGetAssetHistory",
          "id": "cloudasset.organizations.batchGetAssetHistory"
        },
        "exportAssets": {
          "path": "v1beta1/{+parent}:exportAssets",
          "id": "cloudasset.organizations.exportAssets",
          "request": {
            "$ref": "ExportAssetsRequest"
          },
          "description": "Exports assets with time and resource types to a given Google Cloud Storage\nlocation. The output format is newline-delimited JSON.\nThis API implements the google.longrunning.Operation API allowing users\nto keep track of the export.",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "parent"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "parent": {
              "pattern": "^organizations/[^/]+$",
              "location": "path",
              "description": "Required. The relative name of the root asset. Can only be an organization\nnumber (such as \"organizations/123\"), or a project id (such as\n\"projects/my-project-id\") or a project number (such as \"projects/12345\").",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "v1beta1/organizations/{organizationsId}:exportAssets"
        }
      },
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the operation resource.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/operations/[^/]+/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/organizations/{organizationsId}/operations/{operationsId}/{operationsId1}",
              "path": "v1beta1/{+name}",
              "id": "cloudasset.organizations.operations.get"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    }
  }
}
